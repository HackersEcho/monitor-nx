<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dafang.monitor.nx.doc.mapper.DocMapper">
    <!--查询同期基本要素AVG,SUM值-->
    <select id="periodsList" parameterType="DocParams" resultType="Doc">
        <choose>
            <when test="sT !=null and sT &lt; eT">
                select t.stationNo,b.station_name as stationName,b.longitude,b.latitude,${cal}(${element}) as val,YEAR(ObserverTime) as year
                <include refid="Common.notCrossYearSql"></include>
                GROUP BY stationNo,YEAR(ObserverTime)
            </when>
            <otherwise>
                SELECT stationNo,stationName,longitude,latitude,val,year FROM
                (select t.stationNo,b.station_name as stationName,b.longitude,b.latitude,${cal}(${element}) as val,YEAR(ObserverTime)+1 as year
                <include refid="Common.crossYearProfixSql"></include>
                GROUP BY stationNo,YEAR(ObserverTime)
                UNION ALL
                select t.stationNo,b.station_name as stationName,b.longitude,b.latitude,${cal}(${element}) as val,YEAR(ObserverTime) as year
                <include refid="Common.crossYearSuffixSql"></include>
                GROUP BY stationNo,YEAR(ObserverTime)) t GROUP BY stationNo,year
            </otherwise>
        </choose>
    </select>
    <!--  同期日数统计  -->
    <select id="periodDays" parameterType="DocParams" resultType="Doc">
        <choose>
            <when test="sT !=null and sT &lt; eT">select t.stationNO,b.station_name as stationName,b.latitude,b.longitude,COUNT(1) AS val,YEAR(ObserverTime) as year
                <include refid="Common.notCrossYearSql"></include>
                GROUP BY stationNo,YEAR(ObserverTime)
            </when>
            <otherwise>
                SELECT year,sum(val) as val,stationNo,stationName,longitude,latitude FROM (
                select t.stationNo,b.station_name as stationName,b.latitude,b.longitude,COUNT(1) AS val,YEAR(ObserverTime)+1 as year
                <include refid="Common.crossYearProfixSql"></include>
                GROUP BY stationNo,YEAR(ObserverTime)
                UNION ALL
                select t.stationNo,b.station_name as stationName,b.latitude,b.longitude,COUNT(1) AS val,YEAR(ObserverTime) as year
                <include refid="Common.crossYearSuffixSql"></include>
                GROUP BY stationNo,YEAR(ObserverTime) )t GROUP BY stationNo,year
            </otherwise>
        </choose>
    </select>
</mapper>